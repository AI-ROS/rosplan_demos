<?xml version="1.0"?>
<launch>

    <param name="/use_sim_time" value="true"/>

    <!-- Arguments -->
    <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="map_file" default="$(find rosplan_stage_demo)/maps/simple_house.yaml"/>
    <arg name="world_file" default="$(find rosplan_stage_demo)/world/simple_house.world"/>
    <arg name="common_param_file" default="$(find rosplan_stage_demo)/config/costmap_common_params_waffle.yaml"/>
    <arg name="local_param_file" default="$(find rosplan_stage_demo)/config/local_costmap_params.yaml"/>
    <arg name="global_param_file" default="$(find rosplan_stage_demo)/config/global_costmap_params.yaml"/>

    <!-- stage simulation -->
    <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)" respawn="false" output="log"/>

    <!-- Map server -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
    </include>

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(arg common_param_file)" command="load" ns="global_costmap" />
        <rosparam file="$(arg local_param_file)" command="load" />
        <rosparam file="$(arg global_param_file)" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
        <remap from="cmd_vel" to="/cmd_vel"/>
        <remap from="odom" to="odom"/>
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="false" />
    </node>

    <!-- AMCL -->
    <include file="$(find turtlebot3_navigation)/launch/amcl.launch">
        <arg name="scan_topic" value="base_scan" />
        <arg name="initial_pose_x" value="6.525"/>
        <arg name="initial_pose_y" value="5.375"/>
        <arg name="initial_pose_a" value="0.000"/>
    </include>

    <!-- ROSPlan -->
    <include file="$(find rosplan_planning_system)/launch/interfaced_planning_system.launch" >
        <arg name="domain_path" value="$(find rosplan_stage_demo)/pddl/domain_turtlebot_demo.pddl" />
        <!-- load a particular initial state into KB at startup (optional) -->
        <arg name="problem_path" value="$(find rosplan_stage_demo)/pddl/problem_turtlebot_demo.pddl" />
        <!-- automatically generated pddl problem will be created here -->
        <arg name="autom_gen_problem_path" value="$(find rosplan_stage_demo)/pddl/generated_problem.pddl" />
        <!-- planner will produce output plan and write to this location -->
        <arg name="data_path" value="$(find rosplan_stage_demo)/pddl/" />
    </include>

    <!-- visualisation of robot sensor data -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rosplan_stage_demo)/config/rosplan_stage_demo.rviz" />

</launch>
